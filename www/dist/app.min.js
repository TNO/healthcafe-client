!function(){var e=["healthcafe.generic","healthcafe.intro","healthcafe.login","healthcafe.personal","healthcafe.bodymeasurements","healthcafe.bloodpressure","healthcafe.bodyweight","healthcafe.bodyfat","healthcafe.waistcircumference","healthcafe.bmi","healthcafe.bloodglucose","healthcafe.cholesterol","healthcafe.vita16","healthcafe.timeline","healthcafe.remarks","healthcafe.sharing","healthcafe.darmklachten"];angular.module("healthcafe",["ionic","ngMessages","angularUUID2","angular-timeline","indexedDB"].concat(e)).run(["$ionicPlatform",function(e){e.ready(function(){window.cordova&&window.cordova.plugins&&window.cordova.plugins.Keyboard&&(cordova.plugins.Keyboard.hideKeyboardAccessoryBar(!0),cordova.plugins.Keyboard.disableScroll(!0)),window.StatusBar&&StatusBar.styleDefault()})}]);for(idx in e)angular.module(e[idx],[])}(),function(){var e={env:"dev",sharing:{healthcafe:{label:"NRC healthcafe",description:"Healthcafe is een concept, een werk-in-uitvoering, waar u binnnen de werkomgeving zelf bepaalde aspecten van uw gezondheid kan meten en daarop zelf kan acteren.",type:"openmhealth"}},datatypes:[],questionnaires:[{name:"darmklachten",controllerPrefix:"Darmklachten",label:"Darmklachten vragenlijst"}],dev:{api:{oauth:{healthcafe:{urls:{authorization:"https://humanstudies.tno.nl/healthcafe/oauth/authorize",redirect:"http://msb2.hex.tno.nl/app-test/app/login/oauth_callback.html?healthcafe",dataPoints:"https://humanstudies.tno.nl/healthcafe/api/openmhealth/v1/dataPoints"},key:"hm2lkbxyssh9vvsn4tjpknavhqifmkzmucrl500o"}}}},test:{api:{oauth:{healthcafe:{urls:{authorization:"https://humanstudies.tno.nl/healthcafe/oauth/authorize",redirect:"http://isdatsoftwareontwikkeling.nl/projecten/healthcafe/app/login/oauth_callback.html?healthcafe",dataPoints:"https://humanstudies.tno.nl/healthcafe/api/openmhealth/v1/dataPoints"},key:"hm2lkbxyssh9vvsn4tjpknavhqifmkzmucrl500o"}}}}};e.current=function(){return e[e.env]},angular.module("healthcafe").constant("config",e).config(["$httpProvider","$indexedDBProvider",function(e,t){e.interceptors.push("OAuth2Interceptor"),t.connection("healthcafe").upgradeDatabase(1,function(e,t,n){datapointsStore=t.createObjectStore("datapoints",{keyPath:"header.id"}),datapointsStore.createIndex("schema",["header.schema_id.namespace","header.schema_id.name","header.schema_id.version"],{unique:!1}),remarksStore=t.createObjectStore("remarks",{keyPath:"id",autoIncrement:!0})}).upgradeDatabase(2,function(e,t,n){answerStore=t.createObjectStore("answers",{keyPath:"id",autoIncrement:!0}),answerStore.createIndex("questionnaire","questionnaire",{unique:!1})})}])}(),function(){angular.module("healthcafe").config(["$stateProvider","$urlRouterProvider","config",function(e,t,n){e.state("app",{url:"/app","abstract":!0,templateUrl:"app/layout.html",controller:"AppController as app"}).state("app.intro",{url:"/intro",views:{mainContent:{templateUrl:"app/intro/intro.html",controller:"IntroController as intro"}}}).state("app.timeline",{url:"/timeline",cache:!1,views:{mainContent:{templateUrl:"app/timeline/timeline.html",controller:"TimelineController as timeline"}}}).state("app.personal_data",{url:"/personal_data",cache:!1,views:{mainContent:{templateUrl:"app/personal/data.html",controller:"PersonalController as personal"}}}).state("app.body_measurements",{url:"/body_measurements",cache:!1,views:{mainContent:{templateUrl:"app/bodymeasurements/data.html",controller:"BodyMeasurementsController as measurements"}}});for(i in n.datatypes){var o=n.datatypes[i];e.state("app."+o.name,{url:"/"+o.name,cache:!1,views:{mainContent:{templateUrl:"app/"+o.name+"/chart.html",controller:o.controllerPrefix+"Controller as "+o.name}}}).state("app."+o.name+"_add",{url:"/"+o.name+"/add",views:{mainContent:{templateUrl:"app/"+o.name+"/create.html",controller:o.controllerPrefix+"CreateController as "+o.name}}}).state("app."+o.name+"_info",{url:"/"+o.name+"/info",views:{mainContent:{templateUrl:"app/"+o.name+"/info.html",controller:"GenericInfoController as info"}}}).state("app."+o.name+"_measurement",{url:"/"+o.name+"/detail/:measurementId",views:{mainContent:{templateUrl:"app/"+o.name+"/detail.html",controller:"GenericDetailController as detail"}}})}for(i in n.questionnaires){var r=n.questionnaires[i];e.state("app."+r.name,{url:"/"+r.name,cache:!1,views:{mainContent:{templateUrl:"app/"+r.name+"/feedback.html",controller:r.controllerPrefix+"Controller as "+r.name}}}).state("app."+r.name+"_answer",{url:"/"+r.name+"/answer",views:{mainContent:{templateUrl:"app/"+r.name+"/answer.html",controller:r.controllerPrefix+"AnswerController as "+r.name}}})}e.state("app.remarks_add",{url:"/remarks/add",views:{mainContent:{templateUrl:"app/remarks/create.html",controller:"RemarksCreateController as remarks"}}}),e.state("app.share",{url:"/share/:service",cache:!1,views:{mainContent:{templateUrl:"app/share/share.html",controller:"ShareController as sharing"}}}),e.state("app.connect",{url:"/share/connect/:service",cache:!1,views:{mainContent:{templateUrl:"app/share/connect.html",controller:"ConnectController as connect"}}}),t.otherwise("/app/intro")}])}(),function(){function e(e){var t=this;return t.datatypes=e.datatypes,t.questionnaires=e.questionnaires,t.sharing=e.sharing,t}angular.module("healthcafe").controller("AppController",e),e.$inject=["config"]}(),function(){function e(e,t,n){var o=this;return e.model=n,e.selector=".bloodglucose-container",e.chartableProperties="blood-glucose",e.chartOptions={measures:{"blood-glucose":{valueKeyPath:"body.blood_glucose.value",range:void 0,units:"mmol/L",chart:{pointFillColor:"#4a90e2",pointStrokeColor:"#0066d6"},thresholds:[{name:"Desirable",max:5.8},{name:"Borderline high",min:5.8,max:7.8},{name:"High",min:7.8}]}}},angular.extend(o,t("GenericChartController",{$scope:e})),o}angular.module("healthcafe.bloodglucose").controller("BloodGlucoseController",e),e.$inject=["$scope","$controller","BloodGlucose"]}(),function(){function e(e){return e.getInstance({namespace:"omh",name:"blood-glucose",version:"1.0"},function(e){return e.level?{blood_glucose:{value:e.level,unit:"mmol/L"},temporal_relationship_to_meal:e.relationship_to_meal?e.relationship_to_meal.name:""}:null})}angular.module("healthcafe.bloodglucose").factory("BloodGlucose",e),e.$inject=["Datapoints"]}(),function(){function e(e,t,n){var o=this;return e.model=n,angular.extend(o,t("GenericCreateController",{$scope:e})),o.relationships_to_meal=[{name:"fasting"},{name:"not fasting"}],o}angular.module("healthcafe.bloodglucose").controller("BloodGlucoseCreateController",e),e.$inject=["$scope","$controller","BloodGlucose"]}(),function(){function e(e,t,n){var o=this;return e.model=n,e.selector=".bmi-container",e.chartableProperties="body-mass-index",e.chartOptions={measures:{"body-mass-index":{valueKeyPath:"body.body_mass_index.value",range:void 0,units:"kg/m2",thresholds:{min:18,max:25}}}},angular.extend(o,t("GenericChartController",{$scope:e})),o}angular.module("healthcafe.bmi").controller("BMIController",e),e.$inject=["$scope","$controller","BMI"]}(),function(){function e(e){return e.getInstance({namespace:"omh",name:"body-mass-index",version:"1.0"},function(e){return e.weight&&e.height?{body_mass_index:{value:e.weight/(e.height*e.height),unit:"kg/m2"}}:null})}angular.module("healthcafe.bmi").factory("BMI",e),e.$inject=["Datapoints"]}(),function(){function e(e,t,n){var o=this;return e.model=n,angular.extend(o,t("GenericCreateController",{$scope:e})),o}angular.module("healthcafe.bmi").controller("BMICreateController",e),e.$inject=["$scope","$controller","BMI"]}(),function(){function e(e,t,n,o,r,a,l,c,s){var u=this;return u.data={body:{weight:null,height:null,waist:null,bodyfat:null},date:new Date},a.get().then(function(e){u.data.body.height=e.body.body_height.value}),u.save=function(){function o(){n.nextViewOptions({disableBack:!0}),t.go("app.timeline")}var d=[a.set(u.data.body)],h=[];h.push(r),h.push(l),h.push(c),h.push(s);for(i in h)d.push(h[i].create(u.data.body,u.data.date).then(function(e){return h[i].load()})["catch"](function(e){return console.log("Error saving data",h[i].schema,e),e}));console.log("Waiting for saves"),e.all(d).then(function(){o()})["catch"](function(e){o()})},u}angular.module("healthcafe.bodymeasurements").controller("BodyMeasurementsController",e),e.$inject=["$q","$state","$ionicHistory","$ionicPopup","BodyWeight","BodyHeight","BMI","BodyFat","WaistCircumference"]}(),function(){function e(e,t,n){var o=this;return e.model=n,e.selector=".bodyfat-container",e.chartableProperties="body_fat_percentage",e.chartOptions={measures:{body_fat_percentage:{valueKeyPath:"body.body_fat_percentage.value",range:void 0,units:"%",chart:{pointFillColor:"#4a90e2",pointStrokeColor:"#0066d6"}}}},angular.extend(o,t("GenericChartController",{$scope:e})),o}angular.module("healthcafe.bodyfat").controller("BodyFatController",e),e.$inject=["$scope","$controller","BodyFat"]}(),function(){function e(e){return e.getInstance({namespace:"omh",name:"body-fat-percentage",version:"1.0"},function(e){return e.bodyfat?{body_fat_percentage:{value:e.bodyfat,unit:"%"}}:null})}angular.module("healthcafe.bodyfat").factory("BodyFat",e),e.$inject=["Datapoints"]}(),function(){function e(e,t,n){var o=this;return e.model=n,angular.extend(o,t("GenericCreateController",{$scope:e})),o}angular.module("healthcafe.bodyfat").controller("BodyFatCreateController",e),e.$inject=["$scope","$controller","BodyFat"]}(),function(){function e(e,t,n){var o=this;return e.model=n,e.selector=".bloodpressure-container",e.chartableProperties="systolic_blood_pressure, diastolic_blood_pressure",e.chartOptions={userInterface:{tooltips:{contentFormatter:function(e){var t=e.omhDatum.body.systolic_blood_pressure.value.toFixed(0),n=e.omhDatum.body.diastolic_blood_pressure.value.toFixed(0);return t+"/"+n}}}},angular.extend(o,t("GenericChartController",{$scope:e})),o}angular.module("healthcafe.bloodpressure").controller("BloodPressureController",e),e.$inject=["$scope","$controller","BloodPressure"]}(),function(){function e(e){return e.getInstance({namespace:"omh",name:"blood-pressure",version:"1.0"},function(e){return e.systolic&&e.diastolic?{systolic_blood_pressure:{value:e.systolic,unit:"mmHg"},diastolic_blood_pressure:{value:e.diastolic,unit:"mmHg"}}:null})}angular.module("healthcafe.bloodpressure").factory("BloodPressure",e),e.$inject=["Datapoints"]}(),function(){function e(e,t,n){var o=this;return e.model=n,angular.extend(o,t("GenericCreateController",{$scope:e})),o}angular.module("healthcafe.bloodpressure").controller("BloodPressureCreateController",e),e.$inject=["$scope","$controller","BloodPressure"]}(),function(){function e(e,t,n){var o=this;return e.model=n,e.selector=".bodyweight-container",e.chartableProperties="body_weight",e.chartOptions={measures:{body_weight:{range:void 0,thresholds:void 0}}},angular.extend(o,t("GenericChartController",{$scope:e})),o}angular.module("healthcafe.bodyweight").controller("BodyWeightController",e),e.$inject=["$scope","$controller","BodyWeight"]}(),function(){function e(e){return e.getInstance({namespace:"omh",name:"body-weight",version:"1.0"},function(e){return e.weight?{body_weight:{value:e.weight,unit:"kg"}}:null})}angular.module("healthcafe.bodyweight").factory("BodyWeight",e),e.$inject=["Datapoints"]}(),function(){function e(e,t,n){var o=this;return e.model=n,angular.extend(o,t("GenericCreateController",{$scope:e})),o}angular.module("healthcafe.bodyweight").controller("BodyWeightCreateController",e),e.$inject=["$scope","$controller","BodyWeight"]}(),function(){function e(e,t,n){var o=this;return e.model=n,e.selector=".cholesterol-container",e.chartableProperties="total-cholesterol,ldl-cholesterol,hdl-cholesterol,triglycerides",e.chartOptions={userInterface:{legend:!0,thresholds:{show:!1},tooltips:{grouped:!1,contentFormatter:function(e){return e.y.toFixed(1)}}},measures:{"total-cholesterol":{valueKeyPath:"body.blood_total_cholesterol.value",range:void 0,seriesName:"Total Cholesterol",units:"mmol/L",chart:{pointFillColor:"#4a90e2",pointStrokeColor:"#0066d6"},thresholds:[{name:"Desirable",max:5},{name:"Borderline high",min:5,max:6.5},{name:"High",min:6.5}]},"ldl-cholesterol":{valueKeyPath:"body.blood_ldl_cholesterol.value",range:{min:0,max:20},seriesName:"LDL Cholesterol",units:"mmol/L",chart:{pointFillColor:"#E24A4A",pointStrokeColor:"#D60000"},thresholds:[{name:"Desirable",max:2.5},{name:"Borderline high",min:2.5,max:3.5},{name:"High",min:3.5}]},"hdl-cholesterol":{valueKeyPath:"body.blood_hdl_cholesterol.value",range:{min:0,max:20},units:"mmol/L",seriesName:"HDL Cholesterol",chart:{pointFillColor:"#4AE250",pointStrokeColor:"#00D605"},thresholds:[{name:"Desirable",min:1.5},{name:"Borderline high",min:1.5,max:1.3},{name:"High",max:1.3}]},triglycerides:{valueKeyPath:"body.blood_triglycerides.value",range:void 0,units:"mmol/L",seriesName:"Triglycerides",chart:{pointFillColor:"#DA4AE2",pointStrokeColor:"#CB00D6"},thresholds:[{name:"Desirable",max:1.7},{name:"Borderline high",min:1.7,max:6},{name:"High",min:6}]}}},angular.extend(o,t("GenericChartController",{$scope:e})),o}angular.module("healthcafe.cholesterol").controller("CholesterolController",e),e.$inject=["$scope","$controller","Cholesterol"]}(),function(){function e(e){return e.getInstance({namespace:"nrc",name:"cholesterol",version:"0.1"},function(e){if(!e.total)return null;var t={blood_total_cholesterol:{value:e.total,unit:"mmol/L"}};return e.ldl&&(t.blood_ldl_cholesterol={value:e.ldl,unit:"mmol/L"}),e.hdl&&(t.blood_hdl_cholesterol={value:e.hdl,unit:"mmol/L"}),e.triglycerides&&(t.blood_triglycerides={value:e.triglycerides,unit:"mmol/L"}),t})}angular.module("healthcafe.cholesterol").factory("Cholesterol",e),e.$inject=["Datapoints"]}(),function(){function e(e,t,n){var o=this;return e.model=n,angular.extend(o,t("GenericCreateController",{$scope:e})),o}angular.module("healthcafe.cholesterol").controller("CholesterolCreateController",e),e.$inject=["$scope","$controller","Cholesterol"]}(),function(){function e(e,t,n){var o=this;return o.darmklachten=[],n.listByQuestionnaire("darmklachten").then(function(e){o.darmklachten=e}),e.selector=".darmklachten-container",o}angular.module("healthcafe.darmklachten").controller("DarmklachtenController",e),e.$inject=["$scope","$controller","Answers"]}(),function(){function e(e,t,n,o){var r=this,a={q01:"1",q02:"1",q03:"1",q04:"1",q05:"1",q06:1,q07:1,q08:"0",q09:"1",q10:"1",q11:"0",q12:1,q13:"0",q14:"0",q15:"0",q16:"0",q17:"0"},i={};return n.listByQuestionnaire("darmklachten").then(function(e){e.length>0?(i.geslacht=e[0].variables.geslacht,i.voedingsgroep1=e[0].variables.voedingsgroep1,i.voedingsgroep2=e[0].variables.voedingsgroep2,i.questionnaireCount=e.length+1):(i.geslacht="Man",i.questionnaireCount=1)}),e.questionnaire="darmklachten",e.defaultValues=a,e.variables=i,e.showVetInformation=function(){o.alert({title:"Vet voedsel",template:"Onder vet voedsel wordt verstaan voedsel met een groot tot zeer groot vetgehalte, zoals bijvoorbeeld gefrituurd voedsel, pizza, room(boter) en melk- en witte chocola."})},e.showTarweInformation=function(){o.alert({title:"Tarweproducten",template:"Onder tarweproducten vallen alle tarwebroodproducten, deegwaren zoals pasta of vermicelli, couscous, gebak, muffins, donuts, koek, pannenkoeken, crackers, ontbijtgranen, muesli, witbier en kiemen (zoals voor op brood of door een salade).<br/>Let op: producten op basis van bijvoorbeeld spelt of maïs vallen <u>niet</u> onder de tarweproducten."})},e.showZuivelInformation=function(){o.alert({title:"Zuivelproducten",template:"Onder zuivelproducten vallen melk, chocolademelk, karnemelk, koffiemelk, vla, yoghurt, kwark, pudding, ontbijtyoghurt, alle soorten kaas, crème fraîche, kookroom, zure room, (slag)room, boter (margarine, halvarine en dergelijke zijn geen zuivelproducten) en ijs.<br/>Let op: het gaat hier om zuivelproducten op basis van koemelk. Producten op basis van schapen- of geitenmelk vallen in dit geval niet onder zuivelproducten."})},e.showKnoflookInformation=function(){o.alert({title:"Knoflook, ui en/of kool consumptie",template:"Met ‘weinig’, ‘gemiddeld’ en ‘veel’ bedoelen we <u>voor uw doen</u> weinig, gemiddeld of veel."})},e.showKoffieInformation=function(){o.alert({title:"Koffie",template:"Decafé wordt niet gerekend onder koffie."})},e.showBuikpijnInformation=function(){o.alert({title:"Buikpijn",template:"Met buikpijn bedoelen we alle vormen van pijn of ongemak in de buik of darmen. Dit kunnen bijvoorbeeld steken, krampen of een voortdurend gevoel van pijn of ongemak zijn."})},e.showOpgeblazenInformation=function(){o.alert({title:"Opgeblazen gevoel",template:"Een opgeblazen gevoel betreft het gevoel dat er druk op uw darmen of buik staat, ook wel omschreven als een vol gevoel. Hierbij is de buik niet zichtbaar opgezwollen."})},e.showOpgezwollenInformation=function(){o.alert({title:"Opgezwollen buik",template:"Met een opgezwollen buik bedoelen we een zichtbaar opgezwollen buik. Dit kan gepaard gaan met een opgeblazen gevoel."})},angular.extend(r,t("GenericAnswerController",{$scope:e})),r}angular.module("healthcafe.darmklachten").controller("DarmklachtenAnswerController",e),e.$inject=["$scope","$controller","Answers","$ionicPopup"]}(),function(){function e(e,t,n){var o=this;return o.darmklachten=[],o.answeredToday=!1,n.listByQuestionnaire("darmklachten").then(function(e){for(var t=0;t<e.length;t++){var n=e[t].date_time,r=new Date;n.getUTCDate()==r.getUTCDate()&&n.getUTCMonth()==r.getUTCMonth()&&n.getUTCFullYear()==r.getUTCFullYear()&&(o.answeredToday=!0)}o.darmklachten=e}),this}angular.module("healthcafe.intro").controller("IntroController",e),e.$inject=["$scope","$ionicHistory","Answers"]}(),function(){function e(e,t,n,o){var r=this;return r.data={body:{questionnaire:e.questionnaire,answers:e.defaultValues,variables:e.variables}},r.save=function(){n.create(r.data.body).then(function(e){t.nextViewOptions({disableBack:!0}),o.path("/intro")})["catch"](function(e){console.log("Error saving data: ",e)})},r}angular.module("healthcafe.generic").controller("GenericAnswerController",e),e.$inject=["$scope","$ionicHistory","Answers","$location"]}(),function(){function e(e,t,n,o,r){function a(e){var n=t.defer(),o=i(e);return r.openStore("answers",function(e){e.insert(o).then(function(e){n.resolve(e)})["catch"](function(e){n.reject(e)})}),n.promise}function i(e){var t={date_time:new Date,questionnaire:e.questionnaire,answers:e.answers,variables:e.variables};return t}function l(){var e=t.defer();return r.openStore("answers",function(t){t.getAll().then(function(t){e.resolve(t)})["catch"](function(t){e.reject(t)})}),e.promise}function c(e){var n=t.defer();return r.openStore("answers",function(t){t.query();var o=t.query().$index("questionnaire").$eq(e);t.findWhere(o).then(function(e){n.resolve(e)})["catch"](function(e){n.reject(e)})}),n.promise}return this.cache=null,{create:a,list:l,listByQuestionnaire:c}}angular.module("healthcafe.generic").factory("Answers",e),e.$inject=["$http","$q","uuid2","config","$indexedDB"]}(),function(){function e(e,t,n){function o(){function t(e){return e.body.effective_time_frame&&e.body.effective_time_frame.date_time?e.body.effective_time_frame.date_time:e.header.creation_date_time}if(!c.chart){if(!e.events||0==e.events.length)return;e.events.sort(function(e,n){return t(e)-t(n)}),e.events=e.events.map(function(t){return e.model.convertDates(t,function(e){return e.toJSON()})}),r(e.events.slice())}return c.chart}function r(t){c.chart&&c.chart.destroy();var n=d3.select(e.selector);c.chart=new OMHWebVisualizations.Chart(t,n,e.chartableProperties,e.chartOptions)}function a(){var t=d3.select(e.selector),n=o();if(n){var r=t.select("svg");r.style("display","block"),n.renderTo(r.node())}}function i(){e.loading=!0,e.events=[],e.model.list().then(function(t){e.events=t,e.loading=!1,a(t)})}function l(){e.loading=!0,e.events=[],e.model.load().then(function(t){e.events=t,e.loading=!1,a(t)})}var c=this;return c.chart=null,c.remove=function(t){e.model.remove(t).then(function(){l()})},i(),e.$on("$ionicView.enter",function(){t.canDragContent(!1),angular.element(n).bind("resize",a)}),e.$on("$ionicView.leave",function(){t.canDragContent(!0),angular.element(n).unbind("resize",a)}),c}angular.module("healthcafe.generic").controller("GenericChartController",e),e.$inject=["$scope","$ionicSideMenuDelegate","$window"]}(),function(){function e(e,t){var n=this;return n.data={body:"undefined"!=typeof e.model.defaults?e.model.defaults():{},date:new Date},n.save=function(){e.model.create(n.data.body,n.data.date).then(function(n){e.model.load().then(function(){t.goBack()})})["catch"](function(e){console.log("Error saving data: ",e)})},n}angular.module("healthcafe.generic").controller("GenericCreateController",e),e.$inject=["$scope","$ionicHistory"]}(),function(){function e(e,t,n,o,r,a){var i=function(e,t){this.schema=e,this.converter=t,this.cache=null};return i.prototype.load=function(){var e=t.defer(),n=this.schema;return a.openStore("datapoints",function(t){var o=t.query().$index("schema").$eq([n.namespace,n.name,n.version]);t.findWhere(o).then(function(t){e.resolve(t)})["catch"](function(t){e.reject(t)})}),e.promise},i.prototype.list=function(){return this.cache?t.when(this.cache):this.load()},i.prototype.get=function(e){var n=t.defer();return a.openStore("datapoints",function(t){t.find(e).then(function(e){n.resolve(e)})["catch"](function(e){n.reject(e)})}),n.promise},i.prototype.remove=function(e){var n=t.defer();return a.openStore("datapoints",function(t){t["delete"](e).then(function(e){n.resolve(e)})["catch"](function(e){n.reject(e)})}),n.promise},i.prototype.create=function(e,n){if(this.converter&&(e=this.converter(e)),!e)return t.reject("Invalid data specified");var o=t.defer(),r=this.createDatapoint(e,n);this.schema;return a.openStore("datapoints",function(e){e.insert(r).then(function(e){o.resolve(e)})["catch"](function(e){o.reject(e)})}),o.promise},i.prototype["import"]=function(e){function n(e){return e&&"string"==typeof e?new Date(e):e}var o=t.defer();if(Array.isArray(e)){var r=this;e=e.map(function(e){return r.convertDates(e,n)})}else"object"==typeof e&&(e=this.convertDates(e,n));return a.openStore("datapoints",function(t){t.upsert(e).then(function(e){o.resolve(e)})["catch"](function(e){o.reject(e)})}),o.promise},i.prototype.convertDates=function(e,t){return e.header&&e.header.creation_date_time&&(e.header.creation_date_time=t(e.header.creation_date_time)),e.header&&e.header.acquisition_provenance&&e.header.acquisition_provenance.source_creation_date_time&&(e.header.acquisition_provenance.source_creation_date_time=t(e.header.acquisition_provenance.source_creation_date_time)),e.body&&e.body.effective_time_frame&&e.body.effective_time_frame.date_time&&(e.body.effective_time_frame.date_time=t(e.body.effective_time_frame.date_time)),e},i.prototype.defaults=function(){return{}},i.prototype.chartableProperties=function(){return this.propertyNames},i.prototype.createDatapoint=function(e,t){return"undefined"==typeof t&&(t=new Date),e.effective_time_frame={date_time:t},{header:{id:n.newuuid(),creation_date_time:new Date,acquisition_provenance:{source_name:"Manual",source_creation_date_time:new Date,modality:"self-reported"},schema_id:this.schema},body:e}},{getInstance:function(e,t){return new i(e,t)}}}angular.module("healthcafe.generic").factory("Datapoints",e),e.$inject=["$http","$q","uuid2","OAuth2","config","$indexedDB"]}(),function(){function e(e,t,n){var o=this;o.measurementId=t.params.measurementId,o.measurement=null;var r=n.getInstance();return r.get(o.measurementId).then(function(e){o.measurement=e,e.body.effective_time_frame&&e.body.effective_time_frame.date_time?date=e.body.effective_time_frame.date_time:date=e.header.creation_date_time,o.date=date})["catch"](function(e){console.log("Error loading data: ",e)}),o}angular.module("healthcafe.generic").controller("GenericDetailController",e),e.$inject=["$scope","$state","Datapoints"]}(),function(){function e(){var e=this;return e}angular.module("healthcafe.generic").controller("GenericInfoController",e)}(),function(){function e(e,t,n,o,r,a){var i=function(e,t){this.schema=e,this.converter=t,this.cache=null};return i.prototype.load=function(){var e=t.defer(),n=this.schema;return a.openStore("datapoints",function(t){var o=t.query().$index("schema").$eq([n.namespace,n.name,n.version]);t.findWhere(o).then(function(t){this.cache=t,e.resolve(t)})["catch"](function(t){e.reject(t)})}),e.promise},i.prototype.list=function(){return this.cache?t.when(this.cache):this.load()},i.prototype.get=function(){var e=t.defer();return this.list().then(function(t){t.length>0?e.resolve(t[0]):e.reject("No datapoints available")})["catch"](function(t){e.reject(t)}),e.promise},i.prototype.remove=function(){var e=t.defer();return this.get().then(function(t){a.openStore("datapoints",function(n){n["delete"](t.header.id).then(function(t){e.resolve()})["catch"](function(t){e.reject(t)})})})["catch"](function(t){e.resolve()}),e.promise},i.prototype.set=function(e,n){function o(){var t=i.createDatapoint(e,n);i.remove().then(function(){this.schema;a.openStore("datapoints",function(e){e.insert(t).then(function(e){r.resolve(e)})["catch"](function(e){r.reject(e)})})})["catch"](function(e){r.reject(e)})}if(this.converter&&(e=this.converter(e)),"undefined"==typeof n&&(n=new Date),!e)return t.reject("Invalid data specified");var r=t.defer();this.get().then(function(t){var n=angular.copy(t.body);delete n.effective_time_frame,JSON.stringify(n)!=JSON.stringify(e)?o():r.resolve(t)})["catch"](function(){o()});var i=this;return r.promise},i.prototype["import"]=function(e){function n(e){return e&&"string"==typeof e?new Date(e):e}var o=t.defer();return Array.isArray(e)?e=this.convertDates(e[0],n):"object"==typeof e&&(e=this.convertDates(e,n)),a.openStore("datapoints",function(t){t.upsert(e).then(function(e){o.resolve(e)})["catch"](function(e){o.reject(e)})}),o.promise},i.prototype.convertDates=function(e,t){return e.header&&e.header.creation_date_time&&(e.header.creation_date_time=t(e.header.creation_date_time)),e.header&&e.header.acquisition_provenance&&e.header.acquisition_provenance.source_creation_date_time&&(e.header.acquisition_provenance.source_creation_date_time=t(e.header.acquisition_provenance.source_creation_date_time)),e.body&&e.body.effective_time_frame&&e.body.effective_time_frame.date_time&&(e.body.effective_time_frame.date_time=t(e.body.effective_time_frame.date_time)),e},i.prototype.createDatapoint=function(e,t){return"undefined"==typeof t&&(t=new Date),e.effective_time_frame={date_time:t},{header:{id:n.newuuid(),creation_date_time:new Date,acquisition_provenance:{source_name:"Manual",source_creation_date_time:new Date,modality:"self-reported"},schema_id:this.schema},body:e}},{getInstance:function(e,t){return new i(e,t)}}}angular.module("healthcafe.generic").factory("StaticDatapoint",e),e.$inject=["$http","$q","uuid2","OAuth2","config","$indexedDB"]}(),function(){function e(e){function t(e){var t=window.localStorage.getItem("token-"+e);return t?JSON.parse(t):null}function n(e){return!!t(e)}function o(e){var n=t(e);return n?n.oauth.access_token:null}function r(t,n){window.localStorage.setItem("redirect-"+t,n);var o=e.current().api,r=o.oauth[t],a=r.urls;url=a.authorization+"?client_id="+r.key+"&redirect_uri="+encodeURIComponent(a.redirect)+"&response_type=token&scope=read_data_points write_data_points delete_data_points",window.location.href=url}function a(e){window.localStorage.removeItem("token-"+e)}return{isAuthenticated:n,getAccessToken:o,login:r,logoff:a}}angular.module("healthcafe.login").factory("OAuth2",e),e.$inject=["config"]}(),function(){function e(e,t,n){function o(t){return t.oauth&&(t.headers.Authorization="Bearer "+e.getAccessToken(t.oauth)),t}function r(e){var o=e.config||{};if(!o.ignoreAuthModule)switch(e.status){case 401:t.$broadcast("event:auth-unauthorized",e);break;case 403:t.$broadcast("event:auth-forbidden",e)}return n.reject(e)}return{request:o,responseError:r}}angular.module("healthcafe.login").factory("OAuth2Interceptor",e),e.$inject=["OAuth2","$rootScope","$q"]}(),function(){function e(e){return e.getInstance({namespace:"omh",name:"body-height",version:"1.0"},function(e){return e.height?{body_height:{value:e.height,unit:"kg"}}:null})}angular.module("healthcafe.personal").factory("BodyHeight",e),e.$inject=["StaticDatapoint"]}(),function(){function e(e){return e.getInstance({namespace:"nrc",name:"date-of-birth",version:"0.1"},function(e){return e.dob?{date_of_birth:e.dob}:null})}angular.module("healthcafe.personal").factory("DateOfBirth",e),e.$inject=["StaticDatapoint"]}(),function(){function e(e){return e.getInstance({namespace:"nrc",name:"gender",version:"0.1"},function(e){return e.gender?{gender:e.gender}:null})}angular.module("healthcafe.personal").factory("Gender",e),e.$inject=["StaticDatapoint"]}(),function(){function e(e,t,n,o,r,a){var i=this;return i.data={body:{dob:null,gender:null,height:null},date:new Date},o.get().then(function(e){i.data.body.dob=e.body.date_of_birth}),r.get().then(function(e){i.data.body.gender=e.body.gender}),a.get().then(function(e){i.data.body.height=e.body.body_height.value}),i.save=function(){function l(){o.load(),r.load(),a.load()}function c(){n.nextViewOptions({disableBack:!0}),t.go("app.timeline")}var s=[o.set(i.data.body),r.set(i.data.body),a.set(i.data.body)];e.all(s).then(function(){l(),c()})["catch"](function(e){l(),c()})},i}angular.module("healthcafe.personal").controller("PersonalController",e),e.$inject=["$q","$state","$ionicHistory","DateOfBirth","Gender","BodyHeight"]}(),function(){function e(e){function t(){o.remarks=[],e.list().then(function(e){o.remarks=e})}function n(){o.remarks=[],e.load().then(function(e){o.remarks=e})}var o=this;return o.remove=function(t){e.remove(t).then(function(){n()})},t(),o}angular.module("healthcafe.remarks").controller("RemarksController",e),e.$inject=["Remarks"]}(),function(){function e(e,t){function n(){var n=e.defer();return t.openStore("remarks",function(e){e.getAll().then(function(e){n.resolve(e)})["catch"](function(e){n.reject(e)})}),n.promise}function o(){return l?e.when(l):n()}function r(n){var o=e.defer();return t.openStore("remarks",function(e){e.get(n).then(function(e){o.resolve(e)})["catch"](function(e){o.reject(e)})}),o.promise}function a(n){var o=e.defer();return t.openStore("remarks",function(e){e["delete"](n).then(function(e){o.resolve(e)})["catch"](function(e){o.reject(e)})}),o.promise}function i(n){var o=e.defer();return t.openStore("remarks",function(e){e.insert(n).then(function(e){o.resolve(e)})["catch"](function(e){o.reject(e)})}),o.promise}var l=null;return{create:i,load:n,list:o,remove:a,get:r,defaults:function(){return{date:new Date}}}}angular.module("healthcafe.remarks").factory("Remarks",e),e.$inject=["$q","$indexedDB"]}(),function(){function e(e,t,n){var o=this;return e.model=n,angular.extend(o,t("GenericCreateController",{$scope:e})),o}angular.module("healthcafe.remarks").controller("RemarksCreateController",e),e.$inject=["$scope","$controller","Remarks"]}(),function(){function e(e,t,n){var o=this,r=e.params.service;return t.isAuthenticated(r)?void e.go("app.share",{service:r}):(o.serviceKey=r,o.service=n.sharing[r],o.login=function(){t.login(r,"/app/share/"+r)},o)}angular.module("healthcafe.sharing").controller("ConnectController",e),e.$inject=["$state","OAuth2","config"]}(),function(){function e(e,t,n,o,r,a){var l=this,c=e.params.service;if(!o.isAuthenticated(c))return t.nextViewOptions({disableBack:!0}),void e.go("app.connect",{service:c});l.serviceKey=c,l.service=r.sharing[c];var s=r.datatypes.slice();for(i in s)s[i].checked=!0;return l.datatypes=s,l.importing=!1,l["import"]=function(){l.importing=!0,a.pull(c,l.datatypes).then(function(t){l.importing=!1;var o=t.reduce(function(e,t){return e+(t?t.length:0)},0);n.alert({title:"Import succeeded",template:""+o+" data point(s) have been imported into your app."}).then(function(t){e.go("app.timeline")})})["catch"](function(t){l.importing=!1,401==t.status?n.alert({title:"Credentials expired",
template:"Unfortunately your credentials have expired. Please allow the application access."}).then(function(t){o.logoff(c),e.go("app.connect",{service:c})}):n.alert({title:"Sharing error",template:"An error occurred while importing data from "+l.service.label+". Please contact an administrator.<br /><br />"+t.status+": "+t.data.error})})},l.exporting=!1,l["export"]=function(){l.exporting=!0,a.push(c,l.datatypes).then(function(t){l.exporting=!1;var o=t.reduce(function(e,t){return e+(t?t.length:0)},0);n.alert({title:"Share succeeded",template:""+o+" data point(s) have been shared with "+l.service.label+"."}).then(function(t){e.go("app.timeline")})})["catch"](function(t){l.exporting=!1,401==t.status?n.alert({title:"Credentials expired",template:"Unfortunately your credentials have expired. Please allow the application access."}).then(function(t){o.logoff(c),e.go("app.connect",{service:c})}):n.alert({title:"Sharing error",template:"An error occurred while sharing data with "+l.service.label+". Please contact an administrator.<br /><br />"+t.status+": "+t.data.error})})},l}angular.module("healthcafe.sharing").controller("ShareController",e),e.$inject=["$state","$ionicHistory","$ionicPopup","OAuth2","config","Share"]}(),function(){function e(e,t,n,o,r,a,i,l,c){function s(e,n){var r=o.sharing[e],a=d(n);if(!r)return console.error("Importing data from invalid service",e),t.reject("Importing data from invalid service");switch(r.type){case"openmhealth":return h(e,a);default:return console.error("Service type for given service is not supported",e,r.type),t.reject("Service type for given service is not supported")}}function u(e,n){var r=o.sharing[e],a=d(n);if(!r)return console.error("Exporting data to invalid service",e),t.reject("Exporting data to invalid service");switch(r.type){case"openmhealth":return f(e,a);default:return console.error("Service type for given service is not supported",e,r.type),t.reject("Service type for given service is not supported")}}function d(e){return e.filter(function(e){return e.checked}).map(function(e){switch(e.name){case"bloodpressure":return r;case"bloodglucose":return l;case"bodyweight":return a;case"cholesterol":return c;case"bmi":return i;default:return console.error("Invalid datatype selected",e.name),null}})}function h(e,r){var a=o.current().api.oauth[e];return a?t.all(r.map(function(t){var o=a.urls.dataPoints+"?schema_namespace="+encodeURIComponent(t.schema.namespace)+"&schema_name="+encodeURIComponent(t.schema.name)+"&schema_version="+encodeURIComponent(t.schema.version);return n.get(o,{oauth:e}).then(function(e){return t["import"](e.data)})})):(console.error("OAuth parameters for given service are not provided in configuration",e),t.reject("OAuth parameters for given service are not provided in configuration"))}function f(e,r){var a=o.current().api.oauth[e];return a?t.all(r.map(function(o){return o.list().then(function(r){var i=a.urls.dataPoints;return t.all(r.map(function(r){function a(e){return"object"==typeof e?e.toJSON():e}r=o.convertDates(r,a);var l=t.defer();return n.post(i,r,{oauth:e}).then(function(e){l.resolve(e)})["catch"](function(e){409==e.status?l.resolve(e):l.reject(e)}),l.promise}))})})):(console.error("OAuth parameters for given service are not provided in configuration",e),t.reject("OAuth parameters for given service are not provided in configuration"))}return{pull:s,push:u}}angular.module("healthcafe.sharing").factory("Share",e),e.$inject=["$indexedDB","$q","$http","config","BloodPressure","BodyWeight","BMI","BloodGlucose","Cholesterol"]}(),function(){function e(e,t,n,o,r,a,i,l,c,s){function u(e){e.body.effective_time_frame&&e.body.effective_time_frame.date_time?date=e.body.effective_time_frame.date_time:date=e.header.creation_date_time;var t=e.header.schema_id.name;return{id:e.header.id,datapoint:e,date:date,badgeIconClass:v[t].icon,badgeClass:e.header.schema_id.name,type:"measurement",measurementType:t,model:v[t].model,showDetail:function(){var n;switch(t){case"body-mass-index":n="bmi";break;default:n=t.replace(/-/g,"")}s.go("app."+n+"_measurement",{measurementId:e.header.id})}}}function d(e){return angular.extend({},e,{badgeIconClass:"ion-flash",badgeClass:"remark",type:"intervention",model:a,showDetail:function(){return!1}})}function h(e){var t=f(e.map(function(e){return e.map(function(e){return e.header&&e.body?u(e):d(e)})}));return t.sort(function(e,t){return new Date(t.date)-new Date(e.date)})}function f(e){return[].concat.apply([],e)}function m(e){p.loading=!0,p.events=[],i.all(e.map(function(e){return e.list()})).then(function(e){p.events=h(e)}).then(function(){p.loading=!1})}var p=this,v={"blood-pressure":{icon:"ion-heart",model:e},"body-weight":{icon:"ion-speedometer",model:t},"body-mass-index":{icon:"ion-ios-flame",model:n},"blood-glucose":{icon:"ion-fork",model:o},cholesterol:{icon:"ion-waterdrop",model:r}};return p.load=function(){var i=[e,t,o,n,r,a];m(i)},p.load(),p.remove=function(e){return confirm("Are you sure?")&&e.model.remove(e.id).then(function(){return e.removed=!0,c(function(){},200)}).then(function(){return e.model.load()}).then(function(){return p.load()}),!1},l.fromTemplateUrl("app/timeline/add_menu.html").then(function(e){p.popover=e}),p}angular.module("healthcafe.timeline").controller("TimelineController",e),e.$inject=["BloodPressure","BodyWeight","BMI","BloodGlucose","Cholesterol","Remarks","$q","$ionicPopover","$timeout","$state"]}(),function(){function e(e,t,n){var o=this;return o.data=[],n.list().then(function(e){o.all=e}),o.test=[],n.listByQuestionnaire("vita16").then(function(e){o.vita16=e}),e.selector=".vita16-container",o}angular.module("healthcafe.vita16").controller("Vita16Controller",e),e.$inject=["$scope","$controller","Answers"]}(),function(){function e(e,t){var n=this,o={q01:4,q02:4,q03:4,q04:4,q05:4,q06:4,q07:4,q08:4,q09:4,q10:4,q11:4,q12:4,q13:4,q14:4,q15:4,q16:4,q17:4};return e.questionnaire="vita16",e.defaultValues=o,angular.extend(n,t("GenericAnswerController",{$scope:e})),n}angular.module("healthcafe.vita16").controller("Vita16AnswerController",e),e.$inject=["$scope","$controller"]}(),function(){function e(e,t,n){var o=this;return e.model=n,e.selector=".waist-container",e.chartableProperties="waist_circumference",e.chartOptions={measures:{waist_circumference:{valueKeyPath:"body.waist_circumference.value",range:void 0,units:"m",chart:{pointFillColor:"#4a90e2",pointStrokeColor:"#0066d6"}}}},angular.extend(o,t("GenericChartController",{$scope:e})),o}angular.module("healthcafe.waistcircumference").controller("WaistCircumferenceController",e),e.$inject=["$scope","$controller","WaistCircumference"]}(),function(){function e(e){return e.getInstance({namespace:"nrc",name:"waist-circumference",version:"0.1"},function(e){return e.waist?{waist_circumference:{value:e.waist,unit:"m"}}:null})}angular.module("healthcafe.waistcircumference").factory("WaistCircumference",e),e.$inject=["Datapoints"]}(),function(){function e(e,t,n){var o=this;return e.model=n,angular.extend(o,t("GenericCreateController",{$scope:e})),o}angular.module("healthcafe.waistcircumference").controller("WaistCircumferenceCreateController",e),e.$inject=["$scope","$controller","WaistCircumference"]}();